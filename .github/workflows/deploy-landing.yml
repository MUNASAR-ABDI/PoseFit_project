name: Deploy Landing Page to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
      
      - name: Install dependencies
        working-directory: ./posefit-landing
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          rm -rf node_modules package-lock.json
          npm ci
          npm install next@14.1.0 react@18.2.0 react-dom@18.2.0 --save
      
      - name: Create App Structure
        working-directory: ./posefit-landing
        run: |
          mkdir -p app
          
          # Create next.config.js
          cat > next.config.js << 'EOL'
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            reactStrictMode: true,
            output: 'export',
            images: {
              unoptimized: true
            }
          };
          
          module.exports = nextConfig;
          EOL
          
          # Create tailwind.config.js
          cat > tailwind.config.js << 'EOL'
          /** @type {import('tailwindcss').Config} */
          module.exports = {
            content: [
              './pages/**/*.{js,ts,jsx,tsx,mdx}',
              './components/**/*.{js,ts,jsx,tsx,mdx}',
              './app/**/*.{js,ts,jsx,tsx,mdx}',
            ],
            theme: {
              extend: {
                backgroundImage: {
                  'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
                  'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',
                },
              },
            },
            plugins: [],
          };
          EOL
          
          # Create postcss.config.js
          cat > postcss.config.js << 'EOL'
          module.exports = {
            plugins: {
              tailwindcss: {},
              autoprefixer: {},
            },
          };
          EOL
          
          # Create layout.tsx
          cat > app/layout.tsx << 'EOL'
          import type { Metadata } from 'next'
          import { Inter } from 'next/font/google'
          import './globals.css'

          const inter = Inter({ subsets: ['latin'] })

          export const metadata: Metadata = {
            title: 'PoseFit',
            description: 'AI-Powered Fitness Training Platform',
          }

          export default function RootLayout({
            children,
          }: {
            children: React.ReactNode
          }) {
            return (
              <html lang="en">
                <body className={inter.className}>{children}</body>
              </html>
            )
          }
          EOL
          
          # Create page.tsx
          cat > app/page.tsx << 'EOL'
          export default function Home() {
            return (
              <main className="flex min-h-screen flex-col items-center justify-between p-24">
                <div className="z-10 max-w-5xl w-full items-center justify-between font-mono text-sm">
                  <h1 className="text-4xl font-bold text-center mb-8">
                    Welcome to PoseFit
                  </h1>
                  <p className="text-center text-xl mb-4">
                    Your AI-Powered Fitness Training Platform
                  </p>
                </div>
              </main>
            )
          }
          EOL
          
          # Create globals.css
          cat > app/globals.css << 'EOL'
          @tailwind base;
          @tailwind components;
          @tailwind utilities;

          :root {
            --foreground-rgb: 0, 0, 0;
            --background-start-rgb: 214, 219, 220;
            --background-end-rgb: 255, 255, 255;
          }

          @media (prefers-color-scheme: dark) {
            :root {
              --foreground-rgb: 255, 255, 255;
              --background-start-rgb: 0, 0, 0;
              --background-end-rgb: 0, 0, 0;
            }
          }

          body {
            color: rgb(var(--foreground-rgb));
            background: linear-gradient(
              to bottom,
              transparent,
              rgb(var(--background-end-rgb))
            )
            rgb(var(--background-start-rgb));
          }
          EOL
      
      - name: Build and Export
        working-directory: ./posefit-landing
        run: npx next build
        env:
          NEXT_TELEMETRY_DISABLED: 1
      
      - name: Debug Output Directory
        working-directory: ./posefit-landing
        run: |
          echo "Listing directories:"
          ls -la
          echo "Looking for 'out' directory:"
          ls -la out || echo "out directory not found"
          echo "Creating out directory if it doesn't exist"
          mkdir -p out
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./posefit-landing/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 