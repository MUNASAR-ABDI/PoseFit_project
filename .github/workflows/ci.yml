name: PoseFit CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd PoseFit_Trainer/AI_PersonTrainer\ backend
        pip install -r requirements.txt
    
    - name: Check formatting
      run: |
        pip install black
        cd PoseFit_Trainer/AI_PersonTrainer\ backend
        black --check .
    
    - name: Start API server for testing
      run: |
        cd PoseFit_Trainer/AI_PersonTrainer\ backend
        python generate_key.py
        python api_server.py &
        # Wait for server to start
        sleep 5
    
    - name: Test API health
      run: |
        curl -f http://localhost:8002/health || exit 1
  
  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd PoseFit_Trainer/personal-trainer-auth
        npm ci
    
    - name: Check linting
      run: |
        cd PoseFit_Trainer/personal-trainer-auth
        npm run lint
    
    - name: Build frontend
      run: |
        cd PoseFit_Trainer/personal-trainer-auth
        npm run build
  
  docker-build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Build and test backend Docker image
      run: |
        docker build -t posefit-backend PoseFit_Trainer/AI_PersonTrainer\ backend
    
    - name: Build and test frontend Docker image
      run: |
        docker build -t posefit-frontend PoseFit_Trainer/personal-trainer-auth
    
    - name: Test docker-compose
      run: |
        docker-compose up -d
        sleep 10
        curl -f http://localhost:8002/health || exit 1
        docker-compose down 